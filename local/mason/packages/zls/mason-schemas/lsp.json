{"type":"object","title":"Zig","properties":{"zig.zls.enableAutofix":{"type":"boolean","scope":"resource","default":true,"description":"Whether to automatically fix errors on save. Currently supports adding and removing discards."},"zig.zls.semanticTokens":{"type":"string","description":"Set level of semantic tokens. Partial only includes information that requires semantic analysis.","enum":["none","partial","full"],"scope":"resource","default":"partial"},"zig.zls.enableInlayHints":{"type":"boolean","scope":"resource","default":true,"description":"Enables inlay hint support when the client also supports it"},"zig.zls.inlayHintsShowVariableDeclaration":{"type":"boolean","scope":"resource","default":true,"description":"Enable inlay hints for variable declarations"},"zig.zls.inlayHintsShowParameterName":{"type":"boolean","scope":"resource","default":true,"description":"Enable inlay hints for parameter names"},"zig.zls.inlayHintsShowBuiltin":{"type":"boolean","scope":"resource","default":true,"description":"Enable inlay hints for builtin functions"},"zig.zls.inlayHintsExcludeSingleArgument":{"type":"boolean","scope":"resource","default":true,"description":"Don't show inlay hints for single argument calls"},"zig.zls.inlayHintsHideRedundantParamNames":{"type":"boolean","scope":"resource","default":false,"description":"Hides inlay hints when parameter name matches the identifier (e.g. foo: foo)"},"zig.zls.inlayHintsHideRedundantParamNamesLastToken":{"type":"boolean","scope":"resource","default":false,"description":"Hides inlay hints when parameter name matches the last token of a parameter node (e.g. foo: bar.foo, foo: &foo)"},"zig.initialSetupDone":{"type":"boolean","default":false,"description":"Has the initial setup been done yet?"},"zig.buildOnSave":{"type":"boolean","default":false,"description":"Compiles code on file save using the settings specified in 'Build Option'."},"zig.buildOption":{"type":"string","default":"build","enum":["build","build-exe","build-lib","build-obj"],"description":"Which build command Zig should use to build the code."},"zig.buildArgs":{"type":"array","default":[],"items":{"type":"string"},"description":"Extra arguments to passed to Zig."},"zig.buildFilePath":{"type":"string","default":"${workspaceFolder}\/build.zig","description":"The path to build.zig. This is only required if zig.buildOptions = build."},"zig.path":{"type":"string","default":null,"description":"Set a custom path to the Zig binary. Empty string will lookup zig in PATH."},"zig.checkForUpdate":{"type":"boolean","scope":"resource","default":true,"description":"Whether to automatically check for new updates"},"zig.revealOutputChannelOnFormattingError":{"type":"boolean","default":true,"description":"Should output channel be raised on formatting error."},"zig.astCheckProvider":{"type":"string","default":"zls","description":"Whether to enable ast-check diagnostics","enum":["off","extension","zls"],"scope":"resource","enumDescriptions":["Disable ast-check diagnostics","Use extension ast-check diagnostics (fewer features)","Use ZLS ast-check diagnostics (includes code actions)"],"enumItemLabels":["Off","Extension","Zig Language Server"]},"zig.zls.warnStyle":{"type":"boolean","scope":"resource","default":false,"description":"Enables warnings for style guideline mismatches"},"zig.zls.highlightGlobalVarDeclarations":{"type":"boolean","scope":"resource","default":false,"description":"Whether to highlight global var declarations"},"zig.zls.dangerousComptimeExperimentsDoNotEnable":{"type":"boolean","scope":"resource","default":false,"description":"Whether to use the comptime interpreter"},"zig.zls.skipStdReferences":{"type":"boolean","scope":"resource","default":false,"description":"When true, skips searching for references in std. Improves lookup speed for functions in user's code. Renaming and go-to-definition will continue to work as is"},"zig.zls.preferAstCheckAsChildProcess":{"type":"boolean","scope":"resource","default":true,"description":"Can be used in conjuction with `enable_ast_check_diagnostics` to favor using `zig ast-check` instead of ZLS's fork"},"zig.formattingProvider":{"type":"string","default":"extension","description":"Whether to enable formatting (requires restarting editor)","enum":["off","extension","zls"],"scope":"resource","enumDescriptions":["Disable formatting","Use extension formatting","Use ZLS formatting (not recommended as zls's formatting is slower)"],"enumItemLabels":["Off","Extension","Zig Language Server"]},"zig.zls.recordSession":{"type":"boolean","scope":"resource","default":false,"description":"When true, zls will record all request is receives and write in into `record_session_path`, so that they can replayed with `zls replay`"},"zig.zls.completionsWithReplace":{"type":"boolean","scope":"resource","default":true,"description":"Completions confirm behavior. If 'true', replace the text after the cursor"},"zig.zls.recordSessionPath":{"type":"string","scope":"resource","format":"path","description":"Output file path when `record_session` is set. The recommended file extension *.zlsreplay"},"zig.zls.buildRunnerGlobalCachePath":{"type":"string","scope":"resource","format":"path","description":"Path to a directory that will be used as the global cache path when executing a projects build.zig. null is equivalent to the path shown by `zig env`"},"zig.trace.server":{"type":"string","description":"Traces the communication between VS Code and the language server.","enum":["off","messages","verbose"],"scope":"window","default":"off"},"zig.zls.builtinPath":{"type":"string","scope":"resource","format":"path","description":"Path to 'builtin;' useful for debugging, automatically set if let null"},"zig.zls.checkForUpdate":{"type":"boolean","scope":"resource","default":true,"description":"Whether to automatically check for new updates"},"zig.zls.path":{"type":"string","scope":"resource","format":"path","description":"Path to `zls` executable. Example: `C:\/zls\/zig-cache\/bin\/zls.exe`."},"zig.zls.zigLibPath":{"type":"string","scope":"resource","format":"path","description":"Zig library path, e.g. `\/path\/to\/zig\/lib\/zig`, used to analyze std library imports"},"zig.zls.enableSnippets":{"type":"boolean","scope":"resource","default":true,"description":"Enables snippet completions when the client also supports them"},"zig.zls.buildRunnerPath":{"type":"string","scope":"resource","format":"path","description":"Path to the `build_runner.zig` file provided by zls. null is equivalent to `${executable_directory}\/build_runner.zig`"},"zig.zls.enableArgumentPlaceholders":{"type":"boolean","scope":"resource","default":true,"description":"Whether to enable function argument placeholder completions"},"zig.zls.globalCachePath":{"type":"string","scope":"resource","format":"path","description":"Path to a directory that will be used as zig's cache. null is equivalent to `${KnownFolders.Cache}\/zls`"},"zig.zls.enableAstCheckDiagnostics":{"type":"boolean","scope":"resource","default":true,"description":"Whether to enable ast-check diagnostics"},"zig.zls.enableBuildOnSave":{"type":"boolean","scope":"resource","default":false,"description":"Whether to enable build-on-save diagnostics"},"zig.zls.replaySessionPath":{"type":"string","scope":"resource","format":"path","description":"Used when calling `zls replay` for specifying the replay file. If no extra argument is given `record_session_path` is used as the default path."}}}