{"type":"object","title":"Zig","properties":{"zig.zls.highlightGlobalVarDeclarations":{"default":false,"type":"boolean","description":"Whether to highlight global var declarations","scope":"resource"},"zig.buildOnSave":{"default":false,"type":"boolean","description":"Compiles code on file save using the settings specified in 'Build Option'."},"zig.zls.dangerousComptimeExperimentsDoNotEnable":{"default":false,"type":"boolean","description":"Whether to use the comptime interpreter","scope":"resource"},"zig.buildOption":{"enum":["build","build-exe","build-lib","build-obj"],"default":"build","type":"string","description":"Which build command Zig should use to build the code."},"zig.zls.skipStdReferences":{"default":false,"type":"boolean","description":"When true, skips searching for references in std. Improves lookup speed for functions in user's code. Renaming and go-to-definition will continue to work as is","scope":"resource"},"zig.zls.preferAstCheckAsChildProcess":{"default":true,"type":"boolean","description":"Can be used in conjuction with `enable_ast_check_diagnostics` to favor using `zig ast-check` instead of ZLS's fork","scope":"resource"},"zig.buildArgs":{"description":"Extra arguments to passed to Zig.","type":"array","default":[],"items":{"type":"string"}},"zig.buildFilePath":{"default":"${workspaceFolder}\/build.zig","type":"string","description":"The path to build.zig. This is only required if zig.buildOptions = build."},"zig.zls.replaySessionPath":{"format":"path","type":"string","description":"Used when calling `zls replay` for specifying the replay file. If no extra argument is given `record_session_path` is used as the default path.","scope":"resource"},"zig.path":{"default":null,"type":"string","description":"Set a custom path to the Zig binary. Empty string will lookup zig in PATH."},"zig.zls.builtinPath":{"format":"path","type":"string","description":"Path to 'builtin;' useful for debugging, automatically set if let null","scope":"resource"},"zig.checkForUpdate":{"default":true,"type":"boolean","description":"Whether to automatically check for new updates","scope":"resource"},"zig.zls.zigLibPath":{"format":"path","type":"string","description":"Zig library path, e.g. `\/path\/to\/zig\/lib\/zig`, used to analyze std library imports","scope":"resource"},"zig.revealOutputChannelOnFormattingError":{"default":true,"type":"boolean","description":"Should output channel be raised on formatting error."},"zig.zls.buildRunnerPath":{"format":"path","type":"string","description":"Path to the `build_runner.zig` file provided by zls. null is equivalent to `${executable_directory}\/build_runner.zig`","scope":"resource"},"zig.astCheckProvider":{"enum":["off","extension","zls"],"type":"string","scope":"resource","enumDescriptions":["Disable ast-check diagnostics","Use extension ast-check diagnostics (fewer features)","Use ZLS ast-check diagnostics (includes code actions)"],"default":"zls","enumItemLabels":["Off","Extension","Zig Language Server"],"description":"Whether to enable ast-check diagnostics"},"zig.zls.globalCachePath":{"format":"path","type":"string","description":"Path to a directory that will be used as zig's cache. null is equivalent to `${KnownFolders.Cache}\/zls`","scope":"resource"},"zig.zls.buildRunnerGlobalCachePath":{"format":"path","type":"string","description":"Path to a directory that will be used as the global cache path when executing a projects build.zig. null is equivalent to the path shown by `zig env`","scope":"resource"},"zig.zls.completionsWithReplace":{"default":true,"type":"boolean","description":"Completions confirm behavior. If 'true', replace the text after the cursor","scope":"resource"},"zig.formattingProvider":{"enum":["off","extension","zls"],"type":"string","scope":"resource","enumDescriptions":["Disable formatting","Use extension formatting","Use ZLS formatting (not recommended as zls's formatting is slower)"],"default":"extension","enumItemLabels":["Off","Extension","Zig Language Server"],"description":"Whether to enable formatting (requires restarting editor)"},"zig.trace.server":{"enum":["off","messages","verbose"],"type":"string","scope":"window","default":"off","description":"Traces the communication between VS Code and the language server."},"zig.zls.checkForUpdate":{"default":true,"type":"boolean","description":"Whether to automatically check for new updates","scope":"resource"},"zig.zls.path":{"format":"path","type":"string","description":"Path to `zls` executable. Example: `C:\/zls\/zig-cache\/bin\/zls.exe`.","scope":"resource"},"zig.zls.enableSnippets":{"default":true,"type":"boolean","description":"Enables snippet completions when the client also supports them","scope":"resource"},"zig.zls.enableArgumentPlaceholders":{"default":true,"type":"boolean","description":"Whether to enable function argument placeholder completions","scope":"resource"},"zig.zls.enableAstCheckDiagnostics":{"default":true,"type":"boolean","description":"Whether to enable ast-check diagnostics","scope":"resource"},"zig.zls.enableBuildOnSave":{"default":false,"type":"boolean","description":"Whether to enable build-on-save diagnostics","scope":"resource"},"zig.zls.enableAutofix":{"default":true,"type":"boolean","description":"Whether to automatically fix errors on save. Currently supports adding and removing discards.","scope":"resource"},"zig.zls.semanticTokens":{"enum":["none","partial","full"],"type":"string","scope":"resource","default":"partial","description":"Set level of semantic tokens. Partial only includes information that requires semantic analysis."},"zig.zls.enableInlayHints":{"default":true,"type":"boolean","description":"Enables inlay hint support when the client also supports it","scope":"resource"},"zig.zls.inlayHintsShowVariableDeclaration":{"default":true,"type":"boolean","description":"Enable inlay hints for variable declarations","scope":"resource"},"zig.zls.inlayHintsShowParameterName":{"default":true,"type":"boolean","description":"Enable inlay hints for parameter names","scope":"resource"},"zig.zls.inlayHintsShowBuiltin":{"default":true,"type":"boolean","description":"Enable inlay hints for builtin functions","scope":"resource"},"zig.zls.inlayHintsExcludeSingleArgument":{"default":true,"type":"boolean","description":"Don't show inlay hints for single argument calls","scope":"resource"},"zig.zls.inlayHintsHideRedundantParamNames":{"default":false,"type":"boolean","description":"Hides inlay hints when parameter name matches the identifier (e.g. foo: foo)","scope":"resource"},"zig.zls.recordSessionPath":{"format":"path","type":"string","description":"Output file path when `record_session` is set. The recommended file extension *.zlsreplay","scope":"resource"},"zig.zls.inlayHintsHideRedundantParamNamesLastToken":{"default":false,"type":"boolean","description":"Hides inlay hints when parameter name matches the last token of a parameter node (e.g. foo: bar.foo, foo: &foo)","scope":"resource"},"zig.zls.recordSession":{"default":false,"type":"boolean","description":"When true, zls will record all request is receives and write in into `record_session_path`, so that they can replayed with `zls replay`","scope":"resource"},"zig.zls.warnStyle":{"default":false,"type":"boolean","description":"Enables warnings for style guideline mismatches","scope":"resource"},"zig.initialSetupDone":{"default":false,"type":"boolean","description":"Has the initial setup been done yet?"}}}