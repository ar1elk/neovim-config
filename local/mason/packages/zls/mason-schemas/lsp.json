{"properties":{"zig.zls.warnStyle":{"scope":"resource","default":false,"description":"Enables warnings for style guideline mismatches","type":"boolean"},"zig.zls.highlightGlobalVarDeclarations":{"scope":"resource","default":false,"description":"Whether to highlight global var declarations","type":"boolean"},"zig.buildOnSave":{"description":"Compiles code on file save using the settings specified in 'Build Option'.","default":false,"type":"boolean"},"zig.zls.dangerousComptimeExperimentsDoNotEnable":{"scope":"resource","default":false,"description":"Whether to use the comptime interpreter","type":"boolean"},"zig.buildOption":{"description":"Which build command Zig should use to build the code.","default":"build","enum":["build","build-exe","build-lib","build-obj"],"type":"string"},"zig.zls.skipStdReferences":{"scope":"resource","default":false,"description":"When true, skips searching for references in std. Improves lookup speed for functions in user's code. Renaming and go-to-definition will continue to work as is","type":"boolean"},"zig.zls.preferAstCheckAsChildProcess":{"scope":"resource","default":true,"description":"Can be used in conjuction with `enable_ast_check_diagnostics` to favor using `zig ast-check` instead of ZLS's fork","type":"boolean"},"zig.zls.recordSession":{"scope":"resource","default":false,"description":"When true, zls will record all request is receives and write in into `record_session_path`, so that they can replayed with `zls replay`","type":"boolean"},"zig.buildFilePath":{"description":"The path to build.zig. This is only required if zig.buildOptions = build.","default":"${workspaceFolder}\/build.zig","type":"string"},"zig.zls.replaySessionPath":{"scope":"resource","format":"path","description":"Used when calling `zls replay` for specifying the replay file. If no extra argument is given `record_session_path` is used as the default path.","type":"string"},"zig.path":{"description":"Set a custom path to the Zig binary. Empty string will lookup zig in PATH.","default":null,"type":"string"},"zig.zls.builtinPath":{"scope":"resource","format":"path","description":"Path to 'builtin;' useful for debugging, automatically set if let null","type":"string"},"zig.checkForUpdate":{"scope":"resource","default":true,"description":"Whether to automatically check for new updates","type":"boolean"},"zig.zls.zigLibPath":{"scope":"resource","format":"path","description":"Zig library path, e.g. `\/path\/to\/zig\/lib\/zig`, used to analyze std library imports","type":"string"},"zig.revealOutputChannelOnFormattingError":{"description":"Should output channel be raised on formatting error.","default":true,"type":"boolean"},"zig.initialSetupDone":{"description":"Has the initial setup been done yet?","default":false,"type":"boolean"},"zig.astCheckProvider":{"enumItemLabels":["Off","Extension","Zig Language Server"],"enumDescriptions":["Disable ast-check diagnostics","Use extension ast-check diagnostics (fewer features)","Use ZLS ast-check diagnostics (includes code actions)"],"type":"string","scope":"resource","default":"zls","description":"Whether to enable ast-check diagnostics","enum":["off","extension","zls"]},"zig.zls.globalCachePath":{"scope":"resource","format":"path","description":"Path to a directory that will be used as zig's cache. null is equivalent to `${KnownFolders.Cache}\/zls`","type":"string"},"zig.zls.buildRunnerGlobalCachePath":{"scope":"resource","format":"path","description":"Path to a directory that will be used as the global cache path when executing a projects build.zig. null is equivalent to the path shown by `zig env`","type":"string"},"zig.zls.completionsWithReplace":{"scope":"resource","default":true,"description":"Completions confirm behavior. If 'true', replace the text after the cursor","type":"boolean"},"zig.formattingProvider":{"enumItemLabels":["Off","Extension","Zig Language Server"],"enumDescriptions":["Disable formatting","Use extension formatting","Use ZLS formatting (not recommended as zls's formatting is slower)"],"type":"string","scope":"resource","default":"extension","description":"Whether to enable formatting (requires restarting editor)","enum":["off","extension","zls"]},"zig.trace.server":{"type":"string","scope":"window","default":"off","description":"Traces the communication between VS Code and the language server.","enum":["off","messages","verbose"]},"zig.zls.checkForUpdate":{"scope":"resource","default":true,"description":"Whether to automatically check for new updates","type":"boolean"},"zig.zls.path":{"scope":"resource","format":"path","description":"Path to `zls` executable. Example: `C:\/zls\/zig-cache\/bin\/zls.exe`.","type":"string"},"zig.zls.enableSnippets":{"scope":"resource","default":true,"description":"Enables snippet completions when the client also supports them","type":"boolean"},"zig.zls.enableArgumentPlaceholders":{"scope":"resource","default":true,"description":"Whether to enable function argument placeholder completions","type":"boolean"},"zig.zls.enableAstCheckDiagnostics":{"scope":"resource","default":true,"description":"Whether to enable ast-check diagnostics","type":"boolean"},"zig.zls.enableBuildOnSave":{"scope":"resource","default":false,"description":"Whether to enable build-on-save diagnostics","type":"boolean"},"zig.zls.enableAutofix":{"scope":"resource","default":false,"description":"Whether to automatically fix errors on save. Currently supports adding and removing discards.","type":"boolean"},"zig.zls.semanticTokens":{"type":"string","scope":"resource","default":"partial","description":"Set level of semantic tokens. Partial only includes information that requires semantic analysis.","enum":["none","partial","full"]},"zig.zls.enableInlayHints":{"scope":"resource","default":true,"description":"Enables inlay hint support when the client also supports it","type":"boolean"},"zig.zls.inlayHintsShowVariableDeclaration":{"scope":"resource","default":true,"description":"Enable inlay hints for variable declarations","type":"boolean"},"zig.zls.inlayHintsShowParameterName":{"scope":"resource","default":true,"description":"Enable inlay hints for parameter names","type":"boolean"},"zig.zls.inlayHintsShowBuiltin":{"scope":"resource","default":true,"description":"Enable inlay hints for builtin functions","type":"boolean"},"zig.zls.buildRunnerPath":{"scope":"resource","format":"path","description":"Path to the `build_runner.zig` file provided by zls. null is equivalent to `${executable_directory}\/build_runner.zig`","type":"string"},"zig.zls.inlayHintsExcludeSingleArgument":{"scope":"resource","default":true,"description":"Don't show inlay hints for single argument calls","type":"boolean"},"zig.zls.recordSessionPath":{"scope":"resource","format":"path","description":"Output file path when `record_session` is set. The recommended file extension *.zlsreplay","type":"string"},"zig.zls.inlayHintsHideRedundantParamNames":{"scope":"resource","default":false,"description":"Hides inlay hints when parameter name matches the identifier (e.g. foo: foo)","type":"boolean"},"zig.buildArgs":{"items":{"type":"string"},"default":[],"description":"Extra arguments to passed to Zig.","type":"array"},"zig.zls.inlayHintsHideRedundantParamNamesLastToken":{"scope":"resource","default":false,"description":"Hides inlay hints when parameter name matches the last token of a parameter node (e.g. foo: bar.foo, foo: &foo)","type":"boolean"}},"type":"object","title":"Zig"}